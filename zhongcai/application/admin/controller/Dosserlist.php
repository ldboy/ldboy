<?php
/**
 * Created by PhpStorm.
 * User: apple
 * Date: 2018/4/27
 * Time: 上午10:40
 */

namespace app\admin\controller;


use app\common\controller\Backend;
use think\Db;
use think\Request;
use wslibs\wsform\InputType;
use wslibs\wsform\Item;
use wslibs\wsform\WsForm;

class Dosserlist extends Backend
{
    private $arr = [0=>'未知',1=>'银行仲裁',2=>'其他类型'];
    private $arr_valid = [1=>'有效',0=>'取消驳回'];
    private $arr_du_type = [1=>'自然人',2=>'机构',3=>'机构法人'];
    private $arr_status = [1=>'申请中',2=>'已受理',3=>'答辩质证',4=>'组庭中',10=>'已完成',0=>'取消驳回'];
    public function _initialize()
    {
        $this->use_action_js();
        $this->noNeedRight = ['*'];
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function initview()
    {
        $form = New WsForm();

        $form->setMultiUrl("Dosserlist/index");
        $form->setAddUrl("Dosserlist/add");
        $form->setDelUrl("Dosserlist/delete");
        $form->setEditUrl("Dosserlist/add");
        $form->setListUrl("Dosserlist/index");

        $form->addItem((new Item())->varName("id")->varTitle("ID")->inputType(InputType::text));
        $form->addItem((new Item())->varName("title")->varTitle("标题")->inputType(InputType::text));

        $form->addItem((new Item())->varName("jg_name")->varTitle("仲裁机构名称")->inputType(InputType::text));
        $form->addItem((new Item())->varName("address")->varTitle("机构地址")->inputType(InputType::text));
        $form->addItem((new Item())->varName("no")->varTitle("卷宗编号")->inputType(InputType::text));
        $form->addItem((new Item())->varName("zno")->varTitle("仲裁受理编号")->inputType(InputType::text));
        $form->addItem((new Item())->varName("type")->varTitle("业务类型")->inputType(InputType::text)->defaultValue("1"));
//        $form->addItem((new Item())->varName("zc_jg_id")->varTitle("仲裁机构")->inputType(InputType::text));
        $form->addItem((new Item())->varName("third_jg_id")->varTitle("第三方机构")->inputType(InputType::text));
        $form->addItem((new Item())->varName("status")->varTitle("状态")->inputType(InputType::text));
        $form->addItem((new Item())->varName("addtime")->varTitle("添加时间")->inputType(InputType::text));
        $form->addItem((new Item())->varName("is_valid")->varTitle("是否失效")->inputType(InputType::text));
//        $form->addItem((new Item())->varName("third_order_id")->varTitle("第三方标识")->inputType(InputType::text));
        $form->addItem((new Item())->varName("money")->varTitle("仲裁金额")->inputType(InputType::text));
        $form->addItem((new Item())->varName("dispute_money")->varTitle("争议金额")->inputType(InputType::text));
        $form->addItem((new Item())->varName("du_type")->varTitle("自然人/机构/法人")->inputType(InputType::text));
        $form->addItem((new Item())->varName("du_name")->varTitle("用户名称")->inputType(InputType::text));
        $form->addItem((new Item())->varName("role")->varTitle("角色")->inputType(InputType::text));
        $form->addItem((new Item())->varName("id_num")->varTitle("身份证号/信用代码")->inputType(InputType::text));
        $form->addItem((new Item())->varName("phone")->varTitle("联系方式")->inputType(InputType::text));

        $form->setMakeType(WsForm::Type_Table);
        $form->makeForm("Dosserlist/index");
    }

    public function addview()
    {

        $form = New WsForm();
        $form->setMultiUrl("Dosserlist/index");
        $form->setAddUrl("Dosserlist/add");
        $form->setDelUrl("Dosserlist/delete");
        $form->setEditUrl("Dosserlist/add");
        $form->setListUrl("Dosserlist/index");

        $form->addItem((new Item())->varName("title")->varTitle("标题")->inputType(InputType::text)->required(true));
        $form->addItem((new Item())->varName("no")->varTitle("卷宗编号")->inputType(InputType::text)->required(true));
        $form->addItem((new Item())->varName("zno")->varTitle("仲裁受理编号")->inputType(InputType::text)->required(true));
        $form->addItem((new Item())->varName("type")->varTitle("业务类型")->inputType(InputType::select)->itemArr([1=>'银行仲裁'])->defaultValue("银行仲裁"));
        $zc_jg = Db::name('jigou')->where("status=1")->select();
        $zc_jg = array_column($zc_jg,'name','id');
        $form->addItem((new Item())->varName("zc_jg_id")->varTitle("仲裁机构")->inputType(InputType::select)->itemArr($zc_jg));
        $form->addItem((new Item())->varName("third_jg_id")->varTitle("第三方机构")->inputType(InputType::text));
        $form->addItem((new Item())->varName("status")->varTitle("状态")->inputType(InputType::radio)->itemArr([1=>'启用',0=>'不启用']));
        $form->addItem((new Item())->varName("addtime")->varTitle("添加时间")->inputType(InputType::datetime)->defaultValue(time()));
        $form->addItem((new Item())->varName("is_valid")->varTitle("是否失效")->inputType(InputType::radio)->itemArr([1=>'有效',0=>'失效']));
        $form->addItem((new Item())->varName("third_order_id")->varTitle("第三方标识")->inputType(InputType::text));
        $form->addItem((new Item())->varName("money")->varTitle("仲裁金额")->inputType(InputType::text)->required(true));
        $form->addItem((new Item())->varName("dispute_money")->varTitle("争议金额")->inputType(InputType::text)->required(true));

        $form->setMakeType(WsForm::Type_Form);
        $form->makeForm("Dosserlist/add");
    }


    public function add(){
        $id = $id = $this->request->param('ids/i');
        $zc_jg = Db::name('jigou')->where("status=1")->select();
        $zc_jg_idlist = array_column($zc_jg,'name','id');
        $this->assign('zc_jg_idlist',$zc_jg_idlist);
        if(IS_AJAX){
            $data = Request::instance()->post('row/a');
            if($id){
                $res = Db::name('dossier')->where('id',$id)->update($data);
            }else{
                $data['addtime'] = time();
                $res = Db::name('dossier')->insert($data);
            }
            if($res){
                $this->success('成功');
            }else{
                $this->error('失败');
            }

        }else{
            if($id){
                $info = Db::name('dossier')->where("id='$id'")->find();
                $this->assign('row',$info);
            }
            return $this->fetch('add');
        }

    }


    public function delete(){
        $id = $id = $this->request->param('ids/i');
        if(!$id){
            $this->error('参数错误');
        }

        $re = Db::name("dossier")->where("id = '$id'")->delete();

        if($re){
            $this->success("删除成功");
        }else{
            $this->error("删除失败");
        }
    }

    public function index()
    {
        $this->relationSearch = true;
        //当前是否为关联查询
        //设置过滤方法
        $this->request->filter(['strip_tags']);
        if ($this->request->isAjax())
        {
            list($where, $sort, $order, $offset, $limit) = $this->buildparams();

            $total = Db::name('dossier')
                ->alias('d')
                ->join('dossier_users du','du.dossier_id=d.id')
                ->join('jigou jg','d.zc_jg_id=jg.id')
                ->where($where)
//                ->order($sort, $order)
                ->count();
            $where_ = [];
            if($this->auth->isSuperAdmin()!=session('admin.jg_id')){
                $where_['d.zc_jg_id'] = session('admin.jg_id');
            }
            $list =  Db::name('dossier')
                ->alias('d')
                ->join('dossier_users du','du.dossier_id=d.id')
                ->join('jigou jg','d.zc_jg_id=jg.id')
                ->where($where)
                ->where($where_)
//                ->order($sort, $order)

                ->field('d.*,du.type as du_type,du.name as du_name,du.role,du.id_num,du.id_type,du.phone,jg.name as jg_name,jg.address')
                ->limit($offset, $limit)
                ->select();

            foreach($list as $key=>$value){
                $list[$key]['addtime'] = date('Y-m-d H:i:s',$value['addtime']);
                $list[$key]['type'] = $this->arr[$value['type']];
                $list[$key]['is_valid'] = $this->arr_valid[$value['is_valid']];
                $list[$key]['status'] = $this->arr_status[$value['status']];
                $list[$key]['is_valid'] = $this->arr_status[$value['is_valid']];
                $list[$key]['du_type'] = $this->arr_du_type[$value['du_type']];
            }
            $result = array("total" => $total, "rows" => $list);

            return json($result);

        }

        return $this->fetch('index');
    }
}