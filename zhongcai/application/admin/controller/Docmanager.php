<?php
/**
 * Created by PhpStorm.
 * User: Lee
 * Date: 2018/4/26
 * Time: 18:50
 */
namespace app\admin\controller;

use app\common\controller\Backend;
use EasyWeChat\Message\Image;
use wslibs\wsform\Item;
use wslibs\wsform\WsForm;
use wslibs\wsform\InputType;
use think\Db;

class Docmanager extends Backend
{
    public function _initialize()
    {
        $this->use_action_js();
        return parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function initadd()
    {
        $form = new WsForm();
        $item = new Item();

        $item->varName("model_name")->varTitle("模板名称：")->inputType(InputType::text)->defaultValue("模板名称");
        $form->addItem($item);

        $item = new Item();
        $item->varName("type")->varTitle("模板类型")->inputType(InputType::radio);
        $item->itemArr(array("1"=>'可编辑',"2"=>"上传"));
        $form->addItem($item);

        $item = new Item();
        $item->varName("create_type")->varTitle("创建类型")->inputType(InputType::radio);
        $item->itemArr(array("1"=>'自动生成',"2"=>"上传"));
        $form->addItem($item);

        $item = new Item();
        $item->varName("view_file")->varTitle("文档模板")->inputType(InputType::text);

        $form->addItem($item);


        $item = new Item();
        $item->varName("c_qx")->varTitle("创建权限")->inputType(InputType::text);

        $form->addItem($item);



        $item = new Item();
        $item->varName("to_sign")->varTitle("是否需要签字")->inputType(InputType::radio);
        $item->itemArr(array("1"=>'需要',"0"=>"不需要"));
        $form->addItem($item);

        $item = new Item();
        $item->varName("c_class")->varTitle("c_class")->inputType(InputType::text);

        $form->addItem($item);


        $item = new Item();
        $item->varName("view_content")->varTitle("模板内容")->inputType(InputType::textarea);
        $form->addItem($item);

        $form->setMakeType(WsForm::Type_Form);
        $form->makeForm("DocManager/add");



        return $form->display($this);

    }


    public function initlist()
    {
        $form = new WsForm();



        $form->setMultiUrl("");
        $form->setAddUrl("Docmanager/add");
        $form->setDelUrl("Docmanager/deldoc");
        $form->setEditUrl("Docmanager/add");
        $form->setListUrl("Docmanager/doclist");



        $item = new Item();
        $item->varName("id")->varTitle("ID")->inputType(InputType::text);
        $form->addItem($item);

        $item = new Item();
        $item->varName("model_name")->varTitle("模板名称")->inputType(InputType::text);
        $form->addItem($item);

        $item = new Item();
        $item->varName('addtime')->varTitle('添加时间')->inputType(InputType::text);
        $form->addItem($item);

        $item = new Item();
        $item->varName('type')->varTitle("模板类型")->inputType(InputType::text);
        $form->addItem($item);


        $item = new Item();
        $item->varName('create_type')->varTitle("创建类型")->inputType(InputType::text);
        $form->addItem($item);


        $item = new Item();
        $item->varName('to_sign')->varTitle("是否需要签字")->inputType(InputType::text);
        $form->addItem($item);


        $item = new Item();
        $item->varName('c_class')->varTitle("c_class")->inputType(InputType::text);
        $form->addItem($item);


        $item = new Item();
        $item->varName('type1_num')->varTitle('表单属性个数')->inputType(InputType::text);
        $form->addItem($item);


        $item = new Item();
        $item->varName('type2_num')->varTitle('签字属性个数')->inputType(InputType::text);
        $form->addItem($item);


        $item = new Item();
        $item->varName('type3_num')->varTitle('上传属性个数')->inputType(InputType::text);
        $form->addItem($item);


        $form->setMakeType(WsForm::Type_Table);
        $form->makeForm("DocManager/doclist");
    }

    public function add()
    {
        $ids = $this->request->param('ids/i');

        if($ids){
            $info = Db::name('dm')->where("id = $ids")->find();

            $this->assign('row',$info);
        }

        if($this->request->isPost()){

            $param = $this->request->post("row/a");

            $data = [];
            $data['model_name'] = $param['model_name'];
            $data['type'] = $param['type'];
            $data['create_type'] = $param['create_type'];
            $data['addtime'] = time();
            $data['c_qx'] = (int)$param['c_qx'];
            $data['view_content'] = $param['view_content'];
            $data['view_file'] =trim( $param['view_file']);
            $data['c_class'] =trim( $param['c_class']);
            $data['to_sign'] =trim( $param['to_sign']);
            /*dump($param);
            dump($data);die;*/

            if($info){
                unset($data['addtime']);
                $id = Db::name('dm')->where("id",$ids)->update($data);
            }else{
                $id = Db::name("dm")->insertGetId($data);
            }


            if($id){
                $this->success("成功");
            }else{
                $this->error("失败");
            }
//
        }




        return $this->fetch();
    }


    public function doclist()
    {
        if($this->request->isAjax()){
            list($where, $sort, $order, $offset, $limit) = $this->buildparams();
            $list = Db::query("select * from zc_dm  order by id limit $offset,$limit");
            foreach($list as $k=>$v){
                $list[$k]['addtime'] = date('Y-m-d H:i:s',$v['addtime']);
                $list[$k]['type'] = ($v['type']-1>0 ? '上传' : '可编辑' );
                $list[$k]['create_type'] = ($v['create_type']-1>0 ? '上传' : '自动生成' );
            }
            $result = array("total" => Db::name('dm')->count(), "rows" => $list);

            return json($result);
        }
        return $this->fetch();
    }


    public function deldoc()
    {
        $ids = $this->request->param('ids/i');
        if(!$ids){
            $this->error("参数错误");
        }

        $re = Db::name('dm')->where("id",$ids)->delete();

        $re ?$this->success("成功"):$this->error("失败");
    }


    public function dmattr(){
        $ids = $this->request->param('ids/i');

        dump($ids);
    }




}